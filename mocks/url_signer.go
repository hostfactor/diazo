// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	userfiles "github.com/hostfactor/diazo/pkg/userfiles"
	mock "github.com/stretchr/testify/mock"
)

// UrlSigner is an autogenerated mock type for the UrlSigner type
type UrlSigner struct {
	mock.Mock
}

// SignedUrl provides a mock function with given fields: fileDesc, httpMethod, folder
func (_m *UrlSigner) SignedUrl(fileDesc userfiles.FileDesc, httpMethod string, folder string) (string, error) {
	ret := _m.Called(fileDesc, httpMethod, folder)

	var r0 string
	if rf, ok := ret.Get(0).(func(userfiles.FileDesc, string, string) string); ok {
		r0 = rf(fileDesc, httpMethod, folder)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(userfiles.FileDesc, string, string) error); ok {
		r1 = rf(fileDesc, httpMethod, folder)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewUrlSigner interface {
	mock.TestingT
	Cleanup(func())
}

// NewUrlSigner creates a new instance of UrlSigner. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUrlSigner(t mockConstructorTestingTNewUrlSigner) *UrlSigner {
	mock := &UrlSigner{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

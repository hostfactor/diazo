// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	filesystem "github.com/hostfactor/api/go/blueprint/filesystem"
	mock "github.com/stretchr/testify/mock"

	providerconfig "github.com/hostfactor/api/go/providerconfig"
)

// Mounter is an autogenerated mock type for the Mounter type
type Mounter struct {
	mock.Mock
}

// MountFileSelection provides a mock function with given fields: vol, sel
func (_m *Mounter) MountFileSelection(vol *providerconfig.Volume, sel *filesystem.FileSelection) (int64, error) {
	ret := _m.Called(vol, sel)

	var r0 int64
	if rf, ok := ret.Get(0).(func(*providerconfig.Volume, *filesystem.FileSelection) int64); ok {
		r0 = rf(vol, sel)
	} else {
		r0 = ret.Get(0).(int64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*providerconfig.Volume, *filesystem.FileSelection) error); ok {
		r1 = rf(vol, sel)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMounter interface {
	mock.TestingT
	Cleanup(func())
}

// NewMounter creates a new instance of Mounter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMounter(t mockConstructorTestingTNewMounter) *Mounter {
	mock := &Mounter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Code generated by mockery v2.36.0. DO NOT EDIT.

package actionsmocks

import (
	actions "github.com/hostfactor/diazo/pkg/actions"
	mock "github.com/stretchr/testify/mock"
)

// OnUploadFunc is an autogenerated mock type for the OnUploadFunc type
type OnUploadFunc struct {
	mock.Mock
}

type OnUploadFunc_Expecter struct {
	mock *mock.Mock
}

func (_m *OnUploadFunc) EXPECT() *OnUploadFunc_Expecter {
	return &OnUploadFunc_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: params
func (_m *OnUploadFunc) Execute(params actions.OnUploadFuncParams) {
	_m.Called(params)
}

// OnUploadFunc_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type OnUploadFunc_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - params actions.OnUploadFuncParams
func (_e *OnUploadFunc_Expecter) Execute(params interface{}) *OnUploadFunc_Execute_Call {
	return &OnUploadFunc_Execute_Call{Call: _e.mock.On("Execute", params)}
}

func (_c *OnUploadFunc_Execute_Call) Run(run func(params actions.OnUploadFuncParams)) *OnUploadFunc_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(actions.OnUploadFuncParams))
	})
	return _c
}

func (_c *OnUploadFunc_Execute_Call) Return() *OnUploadFunc_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *OnUploadFunc_Execute_Call) RunAndReturn(run func(actions.OnUploadFuncParams)) *OnUploadFunc_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewOnUploadFunc creates a new instance of OnUploadFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOnUploadFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *OnUploadFunc {
	mock := &OnUploadFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

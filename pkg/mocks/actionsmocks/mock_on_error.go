// Code generated by mockery v2.36.0. DO NOT EDIT.

package actionsmocks

import mock "github.com/stretchr/testify/mock"

// OnError is an autogenerated mock type for the OnError type
type OnError struct {
	mock.Mock
}

type OnError_Expecter struct {
	mock *mock.Mock
}

func (_m *OnError) EXPECT() *OnError_Expecter {
	return &OnError_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: err
func (_m *OnError) Execute(err error) {
	_m.Called(err)
}

// OnError_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type OnError_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - err error
func (_e *OnError_Expecter) Execute(err interface{}) *OnError_Execute_Call {
	return &OnError_Execute_Call{Call: _e.mock.On("Execute", err)}
}

func (_c *OnError_Execute_Call) Run(run func(err error)) *OnError_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(error))
	})
	return _c
}

func (_c *OnError_Execute_Call) Return() *OnError_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *OnError_Execute_Call) RunAndReturn(run func(error)) *OnError_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewOnError creates a new instance of OnError. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOnError(t interface {
	mock.TestingT
	Cleanup(func())
}) *OnError {
	mock := &OnError{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
